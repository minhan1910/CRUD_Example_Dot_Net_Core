@model IEnumerable<PersonResponse>

@{
    ViewBag.Title = "Persons";
}

<form action="~/persons/index" method="get">
    <h1>Persons</h1>

    <a href="~/persons/create">Create Person</a>

    <div class="box flex">
        <div class="flex-1">
            <select class="form-input" name="searchBy">
                @foreach (var field in ViewBag.SearchFields)
                {
                    @if (field.Key == ViewBag.CurrentSearchBy)
                    {
                        <option value="@field.Key" selected>@field.Value</option>
                    } else
                    {
                        <option value="@field.Key">@field.Value</option>
                    }
                }
                @* searchBy=PersonName&searchString=abc*@
            </select>
        </div>

        <div class="flex-1">
            <input type="search" id="Search" class="form-input" placeholder="Search" 
                name="searchString" value="@ViewBag.CurrentSearchString"/>
        </div>

        <div class="flex-1">
            <button class="button button-blue-back">Search</button>
            <a href="~/persons/index" class="link-hover">Clear all</a>
        </div>
    </div>

    <table class="table w-100 mt">
        <thead>
            <tr>
                
                @{
                    /*
                     * Key: Column Name
                     * Value: Display Name of Column
                     */
                    Dictionary<string, string> columns = new()
                    {
                       {nameof(PersonResponse.PersonName), "Person Name"},
                       {nameof(PersonResponse.Email), "Email"},
                       {nameof(PersonResponse.DateOfBirth), "Date of Birth"},
                       {nameof(PersonResponse.Age), "Age"},
                       {nameof(PersonResponse.Gender), "Gender"},
                       {nameof(PersonResponse.Country), "Country"},
                       {nameof(PersonResponse.Address), "Address"},
                       {nameof(PersonResponse.ReceiveNewsLetters), "Receive News Letters"},
                    };

                    foreach (var column in columns)
                    {
                        var columnName = column.Key;
                        var displayName = column.Value;
 
                        @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                        {
                            { "ColumnName", columnName},
                            { "DisplayName", displayName}
                        });
                    }
                }
                
            </tr>
        </thead>
        <tbody>
            @foreach(PersonResponse person in @Model)
            {
                <tr>
                    <td style="width: 15%;">@person.PersonName</td>
                    <td style="width: 20%;">@person.Email</td>
                    <td style="width: 13%;">@person.DateOfBirth?.ToString("dd MMMM yyyy")</td>
                    <td style="width: 9%;">@person.Age</td>
                    <td style="width: 9%;">@person.Gender</td>
                    <td style="width: 10%;">@person.Country</td>
                    <td style="width: 10%;">@person.Address</td>
                    <td style="width: 10%;">@person.ReceiveNewsLetters</td>
                </tr>
            }
        </tbody>
    </table>
</form>